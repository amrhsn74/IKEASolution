@model IEnumerable<EmployeeDto>
@inject IDepartmentServices departmentServices
@{
    var Departments = new SelectList(departmentServices.GetAllDepartments(), nameof(DepartmentDto.Id), nameof(DepartmentDto.Name));
}
@{
    ViewData["Title"] = "Employees";
}

<h1>Employees</h1>
<br />
<br />
<a asp-controller="Employee" asp-action="Create" class="btn btn-primary">Create New Employee</a>
<br />

<form asp-action="Index" method="get" class="mt-3 row justify-content-center align-items-center">
    <div class="row col-8 offset-1">
        <div class="col-8">
            <input type="text" name="search" class="form-control" placeholder="Search By Name..."/>
        </div>
        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-success"/>
        </div>
    </div>
</form>

@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover mt-4">
        <thead class="text-center">
            <tr>
                <th>@Html.DisplayNameFor(E => E.Name)</th>
                <th>@Html.DisplayNameFor(E => E.Email)</th>
                <th>@Html.DisplayNameFor(E => E.Department)</th>
                <th>@Html.DisplayNameFor(E => E.EmployeeType)</th>
                <th>@Html.DisplayNameFor(E => E.Age)</th>
                <th>@Html.DisplayNameFor(E => E.Salary)</th>
                <th>@Html.DisplayNameFor(E => E.IsActive)</th>
                <th>@Html.DisplayNameFor(E => E.Gender)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody class="text-center">
            @foreach (var Emp in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(E => Emp.Name)</td>
                    <td>@Html.DisplayFor(E => Emp.Email)</td>
                    <td>@Html.DisplayFor(E => Emp.Department)</td>
                    @*<td>@Html.DisplayFor(E => Emp.EmployeeType)</td>*@
                    <td>@Emp.EmployeeType</td>
                    <td>@Html.DisplayFor(E => Emp.Age)</td>
                    <td>@Html.DisplayFor(E => Emp.Salary)</td>
                    <td>@Html.DisplayFor(E => Emp.IsActive)</td>
                    <td>@Html.DisplayFor(E => Emp.Gender)</td>
					<partial name="_ButtonsPartial" model="@Emp.Id" />
                </tr>
                <!-- Modal -->
                <div class="modal fade" id="DeleteEmployee" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Employee</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <h4>Are you sure you want to delete employee @Emp.Name ?</h4>
                            </div>
                            <div class="modal-footer">
                                <form asp-action="Delete" asp-route-EmpId="@Emp.Id" method="post">
                                    <div asp-validation-summary="ModelOnly"></div>
                                    <div class="mt-4">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                        <input type="submit" value="Delete" class="btn btn-danger" />
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-warning text-center mt-3">
        <h3> There Is No Employee :(</h3>
    </div>
}

